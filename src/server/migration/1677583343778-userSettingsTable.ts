import { MigrationInterface, QueryRunner } from "typeorm";

export class userSettingsTable1677583343778 implements MigrationInterface {
    name = 'userSettingsTable1677583343778'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "default_setting" ("id" SERIAL NOT NULL, "default_home_airport" character varying NOT NULL, "default_temperature_unit" boolean NOT NULL, "default_time_display_unit" boolean NOT NULL, "default_wind_speed_unit" boolean NOT NULL, "default_distance_unit" boolean NOT NULL, "default_visibility_unit" boolean NOT NULL, "max_takeoff_weight_category" character varying NOT NULL, "true_airspeed" integer NOT NULL, "ceiling_at_departure_min" integer NOT NULL, "ceiling_at_departure_max" integer NOT NULL, "surface_visibility_at_departure_min" integer NOT NULL, "surface_visibility_at_departure_max" integer NOT NULL, "crosswinds_at_departure_airport_min" integer NOT NULL, "crosswinds_at_departure_airport_max" integer NOT NULL, "ceiling_along_route_min" integer NOT NULL, "ceiling_along_route_max" integer NOT NULL, "surface_visibility_along_route_min" integer NOT NULL, "surface_visibility_along_route_max" integer NOT NULL, "en_route_icing_probability_min" integer NOT NULL, "en_route_icing_probability_max" integer NOT NULL, "en_route_icing_intensity_min" integer NOT NULL, "en_route_icing_intensity_max" integer NOT NULL, "en_route_turbulence_intensity_min" integer NOT NULL, "en_route_turbulence_intensity_max" integer NOT NULL, "en_route_convective_potential_min" integer NOT NULL, "en_route_convective_potential_max" integer NOT NULL, "ceiling_at_destination_min" integer NOT NULL, "ceiling_at_destination_max" integer NOT NULL, "surface_visibility_at_destination_min" numeric NOT NULL, "surface_visibility_at_destination_max" numeric NOT NULL, "crosswinds_at_destination_airport_min" integer NOT NULL, "crosswinds_at_destination_airport_max" integer NOT NULL, CONSTRAINT "PK_a78675ebadaab93ba9aae633b88" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "user_settings" ("id" SERIAL NOT NULL, "default_home_airport" character varying NOT NULL, "default_temperature_unit" boolean NOT NULL, "default_time_display_unit" boolean NOT NULL, "default_wind_speed_unit" boolean NOT NULL, "default_distance_unit" boolean NOT NULL, "default_visibility_unit" boolean NOT NULL, "max_takeoff_weight_category" character varying NOT NULL, "true_airspeed" integer NOT NULL, "ceiling_at_departure_min" integer NOT NULL, "ceiling_at_departure_max" integer NOT NULL, "surface_visibility_at_departure_min" integer NOT NULL, "surface_visibility_at_departure_max" integer NOT NULL, "crosswinds_at_departure_airport_min" integer NOT NULL, "crosswinds_at_departure_airport_max" integer NOT NULL, "ceiling_along_route_min" integer NOT NULL, "ceiling_along_route_max" integer NOT NULL, "surface_visibility_along_route_min" integer NOT NULL, "surface_visibility_along_route_max" integer NOT NULL, "en_route_icing_probability_min" integer NOT NULL, "en_route_icing_probability_max" integer NOT NULL, "en_route_icing_intensity_min" integer NOT NULL, "en_route_icing_intensity_max" integer NOT NULL, "en_route_turbulence_intensity_min" integer NOT NULL, "en_route_turbulence_intensity_max" integer NOT NULL, "en_route_convective_potential_min" integer NOT NULL, "en_route_convective_potential_max" integer NOT NULL, "ceiling_at_destination_min" integer NOT NULL, "ceiling_at_destination_max" integer NOT NULL, "surface_visibility_at_destination_min" numeric NOT NULL, "surface_visibility_at_destination_max" numeric NOT NULL, "crosswinds_at_destination_airport_min" integer NOT NULL, "crosswinds_at_destination_airport_max" integer NOT NULL, "user_id" integer NOT NULL, CONSTRAINT "PK_00f004f5922a0744d174530d639" PRIMARY KEY ("id"))`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`DROP TABLE "user_settings"`);
        await queryRunner.query(`DROP TABLE "default_setting"`);
    }

}
